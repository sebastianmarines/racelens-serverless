AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Racelens Serverless

Parameters:
  RekognitionCollectionName:
    Type: String
    Default: racelens_dev
  BucketName:
    Type: String
    Default: racelens-images-dev
  DynamoDBTableName:
    Type: String
    Default: racelens_dev

Globals:
  Function:
    Timeout: 3
    Runtime: python3.9
    Architectures:
      - x86_64
    CodeUri: lambda/
    Environment:
      Variables:
        COLLECTION_NAME: !Ref RekognitionCollectionName
        DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
  Api:
    EndpointConfiguration: REGIONAL
    Cors: "'*'"
    BinaryMediaTypes: ["*~1*"]

Resources:
  IndexFaces:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.index_faces
      MemorySize: 128
      Policies:
        - AmazonS3FullAccess
        - AmazonRekognitionFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        IndexFacesEvent:
          Type: S3
          Properties:
            Bucket: !Ref ImagesBucket
            Events: s3:ObjectCreated:*
  FindFaces:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.find_faces
      MemorySize: 512 # TODO: Check if it works with 128
      Policies:
        - AmazonS3FullAccess
        - AmazonRekognitionFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Find:
          Type: Api
          Properties:
            Path: /find
            Method: post

  RekognitionCollection:
    Type: AWS::Rekognition::Collection
    Properties:
      CollectionId: !Ref RekognitionCollectionName

  ImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
  ImagesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ImagesBucket
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub arn:aws:s3:::${ImagesBucket}/*

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: !Ref DynamoDBTableName
      Tags:
        - Key: key
          Value: value

Outputs:
  ProdDataEndpoint:
    Description: "API Prod stage endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
